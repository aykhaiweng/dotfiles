#!/usr/bin/env bash

# Where the magic happens.
export DOTFILES=~/.dotfiles
export KURA_FTS=1

# initialize sudo
sudo -v

########################################################
# FIRST TIME SETUP THERE SHOULD BE NO DEPENDENCIES HERE
########################################################

# Logging stuff.
function e_header()   { echo -e "\n================================================\n$@\n------------------------------------------------"; }
function e_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
function e_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }
function e_arrow()    { echo -e " \033[1;34m➜\033[0m  $@"; }

# Special use for Ubuntu only
e_header "Downloading git and curl"
[[ "$(cat /etc/issue 2> /dev/null)" =~ Ubuntu ]] && sudo apt install -y -qq git curl

# If $DOTFILES doesn't exist, attempt to pull and update the git submodules
if [[ ! -d "$DOTFILES" ]]; then
    export KURA_FTS=1
    # Dotfiles directory doesn't exist? Clone it!
    e_header "Downloading dotfiles"
    git clone --branch master --recursive https://github.com/aykhaiweng/.dotfiles.git $DOTFILES --depth 1
    cd $DOTFILES
elif [[ "$1" != "restart" ]]; then
    export KURA_FTS=0
    # Make sure we have the latest files.
    e_header "Updating dotfiles"
    cd $DOTFILES
    prev_head="$(git rev-parse HEAD)"
    git pull
    git submodule update --init --recursive --quiet
    if [[ "$(git rev-parse HEAD)" != "$prev_head" ]]; then
        if is_dotfiles_bin; then
            e_header "Changes detected, restarting script"
            exec "$0" restart
        else
            e_header "Changes detected, please re-run script"
            exit
        fi
    fi
fi

# Initialize the general functions
source $DOTFILES/source/00_general_functions.sh

# Add binaries into the path
[[ -d $DOTFILES/bin ]] && export PATH=$DOTFILES/bin:$PATH

# Tweak file globbing.
shopt -s dotglob
shopt -s nullglob

# Create caches dir and init subdir, if they don't already exist.
mkdir -p "$DOTFILES/caches/init"

# Create .config directory if the folder doesn't exist
mkdir -p "$HOME/.config/"

# Do the stuff
exec $SHELL
e_header "Doing stuff"
dostuff

# All done!
e_header "Setup complete\nThings you might wanna run:"
e_arrow "nvim +PlugUpdate"
e_arrow "chsh"
e_success "All done!"
echo ""
echo ""


# Reload shell
exec $SHELL
