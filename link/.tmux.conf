# terminal options
set -g default-shell /bin/zsh
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

# status
set -g status on

# mouse
set -g mouse on

# Allow tmux to rename the terminal title
set -g set-titles on

# disable escape key
set -g escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# display tmux messages for x seconds
set -g display-time 5000

# refresh the statusbar every x seconds
set -g status-interval 1

# focus events enabled for terminals that support them
set -g focus-events on

# switches to another active session when the last window in a session
# is closed
set-option -g detach-on-destroy on

# Starts numbering from 1. It's easier to reach than 0
set -g base-index 1

# super useful when using "grouped sessions" in a multi monitor setup
setw -g aggressive-resize on
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# activity
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none
set-window-option -g monitor-activity off


#============================
# KEY BINDINGS
#============================
set -g status-keys vi
set -g mode-keys vi
set -gw xterm-keys on

# change prefix binding
unbind C-b
set -g prefix C-a

# switch panes using Alt-arrow without prefix
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Default movement binds
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Function keys.
bind -n C-S-Tab previous-window
bind -n C-Tab next-window
# bind -T root C-S-[ swap-window -t -1
# bind -T root C-S-] swap-window -t +1

# override default window splitting
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# F12 to choose-tree
# bind -T F12 choose-tree


# Floating windows
bind-key -n F2 run-shell -b '\
    if [ "#{session_name}" != "lazydocker" ] ; then \
        if [ "#{session_name}" = "lazygit" ]; then \
            tmux kill-pane; \
        else \
            tmux popup -d "#{pane_current_path}" -xC -yC -w70% -h80% \
                -E "tmux attach -t \"lazygit\" || tmux new -s \"lazygit\" \"lazygit\" "; \
        fi; \
    fi; \
'
# bind -n F3 display-popup -E "lazydocker"
bind-key -n F3 run-shell -b '\
    if [ "#{session_name}" != "lazygit" ] ; then \
        if [ "#{session_name}" = "lazydocker" ]; then \
            tmux detach-client; \
        else \
            tmux popup -d "$HOME" -xC -yC -w70% -h80% \
                -E "tmux attach -t \"lazydocker\" || tmux new -s \"lazydocker\" \"lazydocker\" "; \
        fi; \
    fi; \
'
bind-key -n F5 run-shell -b '\
    if [ "#{session_name}" != "lazygit" ] ; then \
        if [ "#{session_name}" != "lazydocker" ] ; then \
            popup_id="popup_$(tmux display-message -p "##{session_name}_##{pane_id}")"; \
            if test "$(echo #{session_name} | cut -d"_" -f 1)" = "popup" ; then \
                tmux detach-client; \
            else \
                tmux popup -d "#{pane_current_path}" -xC -yC -w70% -h80% \
                    -E "tmux attach -t \"${popup_id}\" || tmux new -s \"${popup_id}\" "; \
            fi; \
        fi; \
    fi; \
'

# reload the tmux.conf file
bind r source-file ~/.tmux.conf


#============================
# COPY MODE
#============================
# override copy and pasting
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Copy selected text (YANK MODE) {
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# }


#============================
# STYLING STUFF
#============================
# set -g @plugin 'catppuccin/tmux'
# set -g @catpuccin_flavour 'mocha'

# Color Definitions
c_cyan="#89dceb"
c_black="#181825"
c_gray="#313244"
c_magenta="#cba6f7"
c_pink="#f5c2e7"
c_red="#f38ba8"
c_green="#a6e3a1"
c_yellow="#f9e2af"
c_blue="#89b4fa"
c_orange="#fab387"

c_bg="#1e1e2e"
c_bg0="#2a2b3c"
c_bg1="#45475a"
c_bg2="#585B70"
c_bg3=colour241
c_bg4="#585b70"
c_gray=colour245

c_fg0="#cdd6f4"
c_fg1=colour223
c_fg2=colour250
c_fg3=colour248
c_fg4=colour246

# Glyphs
separator_right=""
separator_left=""
separator_sub_right=""
separator_sub_left=""


#============================
# STATUS STUFF
#============================
# Set the status bar on
set -g status on

# Set the position of window lists
set -g status-justify left
set -g status-position bottom

# Window
setw -g window-status-current-style 'fg=#1e1e2e bg=#f9e2af bold'
setw -g window-status-current-format '#[bg=#{c_blue},fg=#{c_bg}]#{separator_right} #I  #{pane_current_command} #[bg=#{c_bg},fg=#{c_blue}]#{separator_right}'
setw -g window-status-style 'fg=#{c_fg0} bg=#{c_bg} bold'
setw -g window-status-format '#I #[fg=#{c_bg3}]#[fg=#{c_fg0}] #{pane_current_command} '

# pane border
set-option -g pane-active-border-style fg=$c_blue
set-option -g pane-border-style fg=$c_bg1

# pane title
set -g pane-border-format "#[bold]   #{pane_current_path}  #{pane_current_command} #[nobold]"
# set -g pane-border-format "#[fg=#{c_bg},bg=#{c_blue},bold] #S:#I #H:#{pane_current_path} > #{pane_current_command} #[fg=#{c_blue},bg=#{c_bg},nobold]" 
set -g pane-border-status top 

# default status bar background and foreground
set -g status-style fg=$c_fg0,bg=$c_bg

# left separators
ls01="#[bg=$c_bg1,fg=$c_fg0,nobold,nounderscore,noitalics]"
ls02="#[fg=$c_bg1,bg=$c_bg0,nobold,nounderscore,noitalics]${separator_right}"
ls11="#[bg=$c_bg0,fg=$c_fg0,nobold,nounderscore,noitalics]"
ls12="#[fg=$c_bg0,bg=$c_bg,nobold,nounderscore,noitalics]${separator_right}"

# right separators
rs01="#[bg=$c_bg,fg=$c_bg1,nobold,nounderscore,noitalics]${separator_left}"
rs02="#[bg=$c_bg1,fg=$c_fg0,nobold,nounderscore,noitalics]"
rs11=
rs12=

# tmux prefix highlight modifications
set -g @prefix_highlight_output_prefix ""
set -g @prefix_highlight_output_suffix ""

# components
s_host="  #H"
s_session="  #S"
s_path="  #{pane_current_path}"
s_prefix="#{?client_prefix,#[bg=${c_blue}],}"

# Left section
set -g status-left-length 100
set -g status-left "${ls01} ${s_host} ${ls02}${ls11} ${s_session}${ls12}"

# Right section
set -g status-right-length 100
set -g status-right "#{prefix_highlight} ${rs01}${rs02} %H:%M %d %b %Y "

#============================
# REMOTE STUFF
#============================
# Change when the window is inactive
# bind -T root F9  \
#   set prefix None \;\
#   set key-table off \;\
#   set status-style "fg=$c_bg3, bg=$c_bg0" \;\
#   if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
#   refresh-client -S \;\
# 
# bind -T off F9 \
#   set -u prefix \;\
#   set -u key-table \;\
#   set -u status-style \;\
#   set -u status-left \;\
#   set -u status-right \;\
#   set -u window-status-current-style \;\
#   set -u window-status-current-format \;\
#   refresh-client -S

wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

# Conditional SSH
# if-shell 'test -n "$SSH_CLIENT"' {
#     source-file ~/.tmux-remote.conf
# }

# if in a tmux-pop up
if-shell 'test "$(echo $(tmux display-message -p "#S") | cut -d "_" -f 1)" = "popup"' {
   source-file ~/.tmux-popup.conf
}


#============================
# TMUX PLUGINS
#============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-sidebar'

# Initializing tpm
run '~/.tmux/plugins/tpm/tpm'

# Conditional loading of different files
if-shell "uname | grep -q Darwin" "source-file ~/.tmux-osx.conf"
if-shell "uname | grep -q Linux" "source-file ~/.tmux-linux.conf"
