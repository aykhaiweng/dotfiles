# terminal options
set -g default-shell /bin/zsh
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

# status
set -g status on

# mouse
set -g mouse on

# Allow tmux to rename the terminal title
set -g set-titles on

# disable escape key
set -g escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# display tmux messages for x seconds
set -g display-time 5000

# refresh the statusbar every x seconds
set -g status-interval 1

# focus events enabled for terminals that support them
set -g focus-events on

# switches to another active session when the last window in a session
# is closed
set-option -g detach-on-destroy on

# Starts numbering from 1. It's easier to reach than 0
set -g base-index 1

# super useful when using "grouped sessions" in a multi monitor setup
setw -g aggressive-resize on
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# activity
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none
set-window-option -g monitor-activity off


#============================
# KEY BINDINGS
#============================
set -g status-keys vi
set -g mode-keys vi
set -gw xterm-keys on

# change prefix binding
unbind C-b
set -g prefix C-a

# switch panes using Alt-arrow without prefix
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Default movement binds
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Set ordering for choose-tree
bind w choose-tree -O name
bind W choose-tree

# Function keys.
# bind-key -n C-[ previous-window
# bind-key -n C-] next-window
# bind -T root C-S-[ swap-window -t -1
# bind -T root C-S-] swap-window -t +1

# override default window splitting
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"  #


#============================
# FLOATING WINDOWS
#============================

bind-key -n F2 run-shell -b '\
    if [ "#{session_name}" != "_lazydocker" ] && [ "#{session_name}" != "_htop" ] && [ "#{session_name}" != "_floaters" ] ; then \
        if [ "#{session_name}" = "_lazygit" ]; then \
            tmux detach-client; \
        else \
            popup_id="$(tmux display-message -p \"##{pane_current_path}\")"; \
            tmux popup -d "#{pane_current_path}" -xC -yC -w70% -h90% \
                -E "tmuxattach _lazygit \"${popup_id}\" lazygit \"source-file $HOME/.tmux-popup.conf\" "; \
        fi; \
    fi; \
'
bind-key -n F3 run-shell -b '\
    if [ "#{session_name}" != "_lazygit" ] && [ "#{session_name}" != "_htop" ] && [ "#{session_name}" != "_floaters" ] ; then \
        if [ "#{session_name}" = "_lazydocker" ]; then \
            tmux detach-client; \
        else \
            popup_id="$(tmux display-message -p \"##{pane_current_path}\")"; \
            tmux popup -d "#{pane_current_path}" -xC -yC -w70% -h90% \
                -E "tmuxattach _lazydocker \"${popup_id}\" lazydocker \"source-file $HOME/.tmux-popup.conf\" "; \
        fi; \
    fi; \
'
bind-key -n F4 run-shell -b '\
    if [ "#{session_name}" != "_lazydocker" ] && [ "#{session_name}" != "_lazygit" ] && [ "#{session_name}" != "_floaters" ] ; then \
        if [ "#{session_name}" = "_htop" ]; then \
            tmux kill-pane; \
        else \
            tmux popup -d "#{pane_current_path}" -xC -yC -w70% -h90% \
                -E "tmuxattach _htop htop htop \"source-file $HOME/.tmux-popup.conf\" "; \
        fi; \
    fi; \
'
bind-key -n F6 run-shell '\
    if [ "#{session_name}" != "_floaters" ]; then \
        popup_id="$(tmux display-message -p \"##{pane_current_path}\")"; \
        tmux popup -d "#{pane_current_path}" -xC -yC -w70% -h90% \
            -E "tmuxattach _floaters \"${popup_id}\" zsh \"source-file $HOME/.tmux-popup.conf\" "; \
    else \ 
        tmux detach-client; \
    fi; \
'

# reload the tmux.conf file
bind r source-file ~/.tmux.conf


#============================
# COPY MODE
#============================
# override copy and pasting
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Copy selected text (YANK MODE) {
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# }

#============================
# TMUX PLUGINS
#============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'jamesoff/tmux-loadavg'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'omerxx/tmux-sessionx'

# Initializing tpm
run '~/.tmux/plugins/tpm/tpm'

#============================
# Sessionx
#============================

set -g @sessionx-bind "q"

#============================
# Catppuccin
#============================

set -g status-position top
set -g @catppuccin_flavour "mocha"
set -g @catppuccin_window_left_separator " "
set -g @catppuccin_window_right_separator ""
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_status_justify "left"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_background "black"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"

set -g status-right-length 100
set -g @catppuccin_status_modules_right "session host date_time"
set -g status-left-length 120
set -g @catppuccin_status_modules_left ""
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_pane_background "white"
set -g @catppuccin_pane_border_status "top"
set -g @catppuccin_pane_status_enabled "no"
set -g @catppuccin_pane_left_separator " " 
set -g @catppuccin_pane_right_separator ""
set -g @catppuccin_pane_middle_separator "█ "
set -g @catppuccin_pane_number_position "left"
set -g @catppuccin_pane_default_fill "number"
set -g @catppuccin_pane_default_text "#{pane_current_path}#{?window_zoomed_flag, (),}"

set -g @catppuccin_directory_text "#{pane_current_path}"

#============================
# Continuum
#============================

set -g @continuum-restore 'on'

# Conditional loading of different files
if-shell "uname | grep -q Darwin" "source-file ~/.tmux-osx.conf"
if-shell "uname | grep -q Linux" "source-file ~/.tmux-linux.conf"
